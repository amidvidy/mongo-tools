functions:
  "setup go env":
    command: shell.exec
    params:
      working_dir: src
      script: |
        set -o verbose
        export GOPATH=`pwd`
        ${preproc_gpm|echo} ./gpm
        ./gpm install

  "generate coverage html + text":
    command: shell.exec
    params:
      working_dir: src
      script: |
        set -o verbose
        export GOPATH=`pwd`
        if [ '${coverage|false}' = 'true' ]
        then
            go tool cover -html=coverage.out -o coverage.html
            go tool cover -func=coverage.out -o coverage.txt
        fi

  "upload coverage report":
    command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: src/coverage.${format|txt}
      remote_file: mongo-tools/coverage/${task_id}.${format|txt}
      bucket: mciuploads
      permissions: public-read
      content_type: ${content_type|text/plain}
      build_variants: ["ubuntu"]

  "attach coverage reports" :
    command: attach.task_files
    params:
      "Coverage Report (HTML)": https://s3.amazonaws.com/mciuploads/mongo-tools/coverage/${task_id}.html
      "Coverage Report (TXT)": https://s3.amazonaws.com/mciuploads/mongo-tools/coverage/${task_id}.txt

  "download mongod":
    command: shell.exec
    params:
      script: |
        set -o errexit
        rm -rf mongodb
        mkdir mongodb
        cd mongodb
        curl -s ${mongo_url} --output mongodb.tgz
        ${decompress} mongodb.tgz
        mv ./mongodb-*/* .

  "start mongod":
    command: shell.exec
    params:
      script: |
        set -o errexit
        rm -rf mongodb/${db_files_dir|db_files}
        rm -f mongodb/${logfile|run.log}
        mkdir mongodb/${db_files_dir|db_files}
        ./mongodb/bin/mongod --dbpath ./mongodb/${db_files_dir|db_files} --logpath ./mongodb/${logfile|run.log} --port ${port|27017} --fork ${mongod_extra_options|}

  "kill mongod":
    command: shell.exec
    params:
      script: |
        pkill -9 mongod;

  "run tests":
    command: gotest.run
    params:
      working_dir: src
      tests:
        - dir: src/github.com/mongodb/mongo-tools/mongoexport
          args: ${coverage_args}

  "move coverage data":
    command: shell.exec
    params:
      working_dir: src
      script: |
        set -o verbose
        if [ '${coverage|false}' = 'true' ]
        then
          mv src/github.com/mongodb/mongo-tools/mongoexport/coverage.out $GOPATH
        fi

pre:
  - command: expansions.fetch
    params:
      keys:
        - local_key: "aws_key"
          remote_key: "project_aws_key"
        - local_key: "aws_secret"
          remote_key: "project_aws_secret"
post:
  - func: "kill mongod"

tasks:
- name: unit
  commands:
    - command: git.get_project
      params:
        directory: src
    - func: "setup go env"
    - func: "download mongod"
    - func: "start mongod"
    - func: "run tests"
    - func: "move coverage data"
    - func: "generate coverage html + text"
    - func: "upload coverage report"
    - func: "upload coverage report"
      vars:
        format: "html"
        content_type: "text/html"
    - func: "attach coverage reports"

- name: dist
  depends_on:
  - name: "unit"
  commands:
    - command: git.get_project
      params:
        directory: src
    - func: "setup go env"
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o verbose
          export GOPATH=`pwd`
          go build -o mongoexport github.com/mongodb/mongo-tools/mongoexport/main
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/mongoexport
        remote_file: mongo-tools/binaries/${build_id}/mongoexport
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream
    - command: attach.task_files
      params:
        "mongoexport": https://s3.amazonaws.com/mciuploads/mongo-tools/binaries/${build_id}/mongoexport


buildvariants:
- name: ubuntu
  display_name: Ubuntu
  run_on:
  - ubuntu1404-test
  expansions:
    mongo_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-2.6.4.tgz
    coverage: true
    coverage_args: "-coverprofile=coverage.out"
  tasks:
  - name: dist
  - name: unit

- name: osx 10.8
  display_name: OSX 10.8
  run_on:
  - osx-108
  expansions:
    mongo_url: https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-2.6.4.tgz
  tasks:
  - name: dist
  - name: unit

- name: solaris
  display_name: Solaris
  run_on:
  - solaris
  expansions:
    mongo_url: https://fastdl.mongodb.org/sunos5/mongodb-sunos5-x86_64-2.6.4.tgz
  tasks:
  - name: dist
  - name: unit

- name: windows-64
  display_name: Windows-64
  run_on:
  - windows-64-vs2013-test
  expansions:
    mongo_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-2.6.4.zip
    preproc_gpm: "perl -pi -e 's/\\r\\n/\\n/g' "
  tasks:
  - name: dist
  - name: unit
